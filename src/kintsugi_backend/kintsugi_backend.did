type Result = variant { 
    Ok : null;              // Success case
    Err : text;             // Error message
};

type Report = record {
    id : nat;               // Unique identifier for the report
    incident_type : text;   // Type of incident
    description : text;     // Description of the incident
    date : text;            // Date of the incident
    location : text;        // Location of the incident
    evidence : opt vec text; // Optional evidence for the report
    priority : opt text;    // Optional priority level of the report
};

service : {
    create_report : (
        text,             // Incident type
        text,             // Description
        text,             // Date
        text,             // Location
        opt vec text,     // Optional evidence
        opt text          // Optional priority
    ) -> (nat);           // Creates a report and returns its ID

    get_report_handler : (
        nat               // Report ID
    ) -> (opt Report);    // Fetches a report by ID

    fetch_reports_handler : () -> (vec Report); // Fetches all reports

    update_report : (
        nat,              // Report ID
        text,             // Incident type
        text,             // Description
        text,             // Date
        text,             // Location
        opt vec text,     // Optional evidence
        opt text          // Optional priority
    ) -> (Result);        // Updates report details and returns Result

    delete_report : (
        nat               // Report ID
    ) -> (Result);        // Deletes a report and returns Result
};
